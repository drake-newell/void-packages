diff -Naurp0 minitube-3.4.2.orig/minitube.pro minitube-3.4.2/minitube.pro
--- minitube-3.4.2.orig/minitube.pro	2020-06-10 22:50:13.000000000 +0600
+++ minitube-3.4.2/minitube.pro	2020-07-31 01:34:31.851701380 +0600
@@ -111 +110,0 @@ HEADERS += src/video.h \
-    src/appwidget.h \
@@ -185 +183,0 @@ SOURCES += src/main.cpp \
-    src/appwidget.cpp \
diff -Naurp0 minitube-3.4.2.orig/src/aboutview.cpp minitube-3.4.2/src/aboutview.cpp
--- minitube-3.4.2.orig/src/aboutview.cpp	2020-06-10 22:50:13.000000000 +0600
+++ minitube-3.4.2/src/aboutview.cpp	2020-07-31 01:32:34.226706841 +0600
@@ -33 +32,0 @@ $END_LICENSE */
-#include "appwidget.h"
@@ -161 +159,0 @@ AboutView::AboutView(QWidget *parent) :
-    verticalLayout->addWidget(new AppsWidget());
diff -Naurp0 minitube-3.4.2.orig/src/appwidget.cpp minitube-3.4.2/src/appwidget.cpp
--- minitube-3.4.2.orig/src/appwidget.cpp	2020-06-10 22:50:13.000000000 +0600
+++ minitube-3.4.2/src/appwidget.cpp	1970-01-01 06:00:00.000000000 +0600
@@ -1,115 +0,0 @@
-#include "appwidget.h"
-#include "constants.h"
-#include "http.h"
-#ifdef APP_EXTRA
-#include "updatedialog.h"
-#endif
-
-AppsWidget::AppsWidget(QWidget *parent) : QWidget(parent) {
-    const int padding = 30;
-
-    QBoxLayout *layout = new QHBoxLayout(this);
-    layout->setMargin(padding);
-    layout->setSpacing(padding*2);
-    layout->setAlignment(Qt::AlignCenter);
-
-#ifdef APP_MAC
-    const QString ext = "dmg";
-#elif defined APP_WIN
-    const QString ext = "exe";
-#else
-    const QString ext = "deb";
-#endif
-
-#ifdef APP_MAC
-    setupApp("Sofa", "sofa." + ext);
-#endif
-    setupApp("Finetune", "finetune." + ext);
-    setupApp("Musictube", "musictube." + ext);
-    setupApp("Musique", "musique." + ext);
-}
-
-void AppsWidget::setupApp(const QString &name, const QString &code) {
-    AppWidget *w = new AppWidget(name, code);
-    layout()->addWidget(w);
-}
-
-void AppsWidget::paintEvent(QPaintEvent *e) {
-    Q_UNUSED(e);
-    QStyleOption o;
-    o.initFrom(this);
-    QPainter p(this);
-    style()->drawPrimitive(QStyle::PE_Widget, &o, &p, this);
-}
-
-AppWidget::AppWidget(const QString &name, const QString &code, QWidget *parent) : QWidget(parent), icon(0), name(name), downloadButton(0) {
-    const QString unixName = code.left(code.lastIndexOf('.'));
-    const QString baseUrl = QLatin1String("https://") + Constants::ORG_DOMAIN;
-    const QString filesUrl = baseUrl + QLatin1String("/files/");
-    url = filesUrl + unixName + QLatin1String("/") + code;
-    webPage = baseUrl + QLatin1String("/") +  unixName;
-
-    QBoxLayout *layout = new QVBoxLayout(this);
-    layout->setMargin(0);
-    layout->setAlignment(Qt::AlignHCenter);
-
-    icon = new QLabel();
-    icon->setMinimumHeight(128);
-    layout->addWidget(icon);
-    const QString iconUrl = filesUrl + QLatin1String("products/") + unixName + QLatin1String(".png");
-    QObject *reply = Http::instance().get(iconUrl);
-    connect(reply, SIGNAL(data(QByteArray)), SLOT(iconDownloaded(QByteArray)));
-
-    QLabel *appTitle = new QLabel(name);
-    appTitle->setAlignment(Qt::AlignHCenter);
-    layout->addWidget(appTitle);
-
-#ifdef APP_EXTRA
-#if !defined(APP_UBUNTU) && !defined(APP_MAC_STORE)
-    downloadButton = new QPushButton(tr("Download"));
-    downloadButton->setAttribute(Qt::WA_MacSmallSize);
-    downloadButton->setCursor(Qt::ArrowCursor);
-    QSizePolicy sp = downloadButton->sizePolicy();
-    sp.setHorizontalPolicy(QSizePolicy::Fixed);
-    sp.setRetainSizeWhenHidden(true);
-    downloadButton->setSizePolicy(sp);
-    connect(downloadButton, SIGNAL(clicked(bool)), SLOT(downloadApp()));
-    layout->addWidget(downloadButton, Qt::AlignHCenter);
-    layout->setAlignment(downloadButton, Qt::AlignHCenter);
-    downloadButton->hide();
-#endif
-#endif
-
-    setCursor(Qt::PointingHandCursor);
-}
-
-void AppWidget::enterEvent(QEvent *e) {
-    Q_UNUSED(e);
-    if (downloadButton) downloadButton->show();
-}
-
-void AppWidget::leaveEvent(QEvent *e) {
-    Q_UNUSED(e);
-    if (downloadButton) downloadButton->hide();
-}
-
-void AppWidget::mouseReleaseEvent(QMouseEvent *e) {
-    if (e->button() == Qt::LeftButton) {
-        QDesktopServices::openUrl(webPage);
-    }
-}
-
-void AppWidget::iconDownloaded(const QByteArray &bytes) {
-    QPixmap pixmap;
-    pixmap.loadFromData(bytes, "PNG");
-    icon->setPixmap(pixmap);
-}
-
-void AppWidget::downloadApp() {
-#ifdef APP_EXTRA
-    if (!icon) return;
-    UpdateDialog *dialog = new UpdateDialog(icon->pixmap(), name, QString(), url, this);
-    dialog->downloadUpdate();
-    dialog->show();
-#endif
-}
diff -Naurp0 minitube-3.4.2.orig/src/appwidget.h minitube-3.4.2/src/appwidget.h
--- minitube-3.4.2.orig/src/appwidget.h	2020-06-10 22:50:13.000000000 +0600
+++ minitube-3.4.2/src/appwidget.h	1970-01-01 06:00:00.000000000 +0600
@@ -1,46 +0,0 @@
-#ifndef APPWIDGET_H
-#define APPWIDGET_H
-
-#include <QtWidgets>
-
-
-class AppWidget : public QWidget {
-
-    Q_OBJECT
-
-public:
-    AppWidget(const QString &name, const QString &code, QWidget *parent = 0);
-    QLabel *icon;
-
-protected:
-    void enterEvent(QEvent *e);
-    void leaveEvent(QEvent *e);
-    void mouseReleaseEvent(QMouseEvent *e);
-
-private slots:
-    void iconDownloaded(const QByteArray &bytes);
-    void downloadApp();
-
-private:
-    QPushButton *downloadButton;
-    QString name;
-    QString url;
-    QString webPage;
-};
-
-class AppsWidget : public QWidget {
-
-    Q_OBJECT
-
-public:
-    AppsWidget(QWidget *parent = 0);
-
-protected:
-    void paintEvent(QPaintEvent *e);
-
-private:
-    void setupApp(const QString &name, const QString &code);
-
-};
-
-#endif // APPWIDGET_H
